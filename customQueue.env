from __future__ import print_function, with_statement

# Abaqus env settings to configure runjob job queue
from driverQueues import Queue
class AbaCUPSQueue(Queue):
    """Submits jobs to a CUPS queue."""

    def __init__(self, name='runjob'):
        self.name = name

    def __repr__(self):
        return 'Submits to %r CUPS lpr queue'%self.name

    def submit(self, options, env):
        "Create abaqus run script and print its full path to self.name printer"

        from os import chmod, environ
        from os.path import abspath
        from subprocess import Popen, PIPE

        job = options['job']
        jobfname = '{0}.que'.format(job)
        cmds = '/opt/CAE/Commands'

        # Collect environment variables to be preserved
        exports = {}
        for e in ('ABA_GPU_VERBOSE', 'ABA_SCALE_STD_CONTACT_CONNECTIVITY'):
            if e in env:
                exports[e] = env[e]

        # Set a default environment variable
        if options.get('gpus'):
            exports.setdefault('ABA_GPU_VERBOSE', '2')

        with open(jobfname, 'w') as jobfile:
            print('\n'.join(
                [
                    '#!/bin/sh',
                    'JOB="{0}"'.format(job),
                    'cd "${PBS_O_WORKDIR:-.}"',
                    'ABAQUS={0}/{1}'.format(cmds, self.getDriverName()),
                ] +
                ['export {0}={1}'.format(k, v) for k, v in exports.items()] +
                ['exec $ABAQUS python -u $JOB.com']
            ), file=jobfile)
        try:
            chmod(jobfname, 0o775) # Set permissions
        except OSError:
            pass

        proc = Popen(
            'lpr -P %r -J %r'%(self.name, job), 
            shell=True,
            stdin=PIPE)
        proc.communicate(input=abspath(jobfname).encode())

del print_function, with_statement
queues['CUPS'] = AbaCUPSQueue()
queues['default'] = queues['CUPS']

# Default run mode (background, interactive, or batch) if the user does
# not specify the run mode on the abaqus command line.
run_mode = BATCH

# vim: set modeline autoindent shiftwidth=4 tabstop=4 expandtab syntax=python:
